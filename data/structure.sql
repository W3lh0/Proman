DROP TABLE IF EXISTS comment, image, task, project, user;

CREATE TABLE users (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(100) NOT NULL,
    createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updateAt TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE projects (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(100) NOT NULL UNIQUE,
    category VARCHAR(100) NOT NULL,
    isCompleted BOOLEAN NOT NULL DEFAULT FALSE,
    createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
    userId INT(11) NOT NULL,
    CONSTRAINT fk_pro_usr
        FOREIGN KEY (userId)
        REFERENCES users(id)
        ON DELETE CASCADE
);

CREATE TABLE tasks (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(100) NOT NULL UNIQUE,
    taskDate DATETIME NOT NULL,
    taskDuration INT(3) NOT NULL,
    isCompleted BOOLEAN NOT NULL DEFAULT FALSE,
    createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
    projectId INT(11) NOT NULL,
    CONSTRAINT fk_tas_pro
        FOREIGN KEY (projectId)
        REFERENCES  projects(id)
        ON DELETE CASCADE
);

CREATE TABLE images (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    filePath VARCHAR(255) NOT NULL,
    fileName VARCHAR(100) NOT NULL,
    uploadedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    taskId INT(11) NOT NULL,
    CONSTRAINT fk_img_tas
        FOREIGN KEY (taskId)
        REFERENCES tasks(id)
        ON DELETE CASCADE 
);

CREATE TABLE comments (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(100) NOT NULL,
    comment TEXT NOT NULL,
    createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
    taskId INT(11) NOT NULL,
    userId INT(11) NOT NULL,
    CONSTRAINT fk_com_tas
        FOREIGN KEY (taskId)
        REFERENCES tasks(id)
        ON DELETE CASCADE
);